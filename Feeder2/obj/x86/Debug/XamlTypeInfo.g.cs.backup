//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



namespace Feeder.PivotApp
{
    public partial class App : global::Windows.UI.Xaml.Markup.IXamlMetadataProvider
    {
        private global::Feeder.FeederApp_XamlTypeInfo.XamlTypeInfoProvider _provider;

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            if(_provider == null)
            {
                _provider = new global::Feeder.FeederApp_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByType(type);
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            if(_provider == null)
            {
                _provider = new global::Feeder.FeederApp_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByName(fullName);
        }

        public global::Windows.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return new global::Windows.UI.Xaml.Markup.XmlnsDefinition[0];
        }
    }
}

namespace Feeder.FeederApp_XamlTypeInfo
{
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlTypeInfoProvider
    {
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByType.TryGetValue(type, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByType(type);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByName(string typeName)
        {
            if (string.IsNullOrEmpty(typeName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByName.TryGetValue(typeName, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByName(typeName);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlMember GetMemberByLongName(string longMemberName)
        {
            if (string.IsNullOrEmpty(longMemberName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlMember xamlMember;
            if (_xamlMembers.TryGetValue(longMemberName, out xamlMember))
            {
                return xamlMember;
            }
            xamlMember = CreateXamlMember(longMemberName);
            if (xamlMember != null)
            {
                _xamlMembers.Add(longMemberName, xamlMember);
            }
            return xamlMember;
        }

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByName = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByType = new global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>
                _xamlMembers = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>();

        string[] _typeNameTable = null;
        global::System.Type[] _typeTable = null;

        private void InitTypeTables()
        {
            _typeNameTable = new string[61];
            _typeNameTable[0] = "Feeder.PivotApp.Settings.SettingsPage";
            _typeNameTable[1] = "Windows.UI.Xaml.Controls.Page";
            _typeNameTable[2] = "Windows.UI.Xaml.Controls.UserControl";
            _typeNameTable[3] = "Feeder.PivotApp.Common.NavigationHelper";
            _typeNameTable[4] = "Windows.UI.Xaml.DependencyObject";
            _typeNameTable[5] = "Feeder.PivotApp.View.About.AboutPage";
            _typeNameTable[6] = "Feeder.PivotApp.Common.ObservableDictionary";
            _typeNameTable[7] = "Object";
            _typeNameTable[8] = "String";
            _typeNameTable[9] = "Feeder.PivotApp.View.Converters.IsReadConverter";
            _typeNameTable[10] = "Feeder.PivotApp.View.Converters.ImageDisplayConverter";
            _typeNameTable[11] = "Feeder.PivotApp.View.ArticlesControl";
            _typeNameTable[12] = "Feeder.PivotApp.View.PopularFeedsControl";
            _typeNameTable[13] = "Feeder.PivotApp.View.AddFromView";
            _typeNameTable[14] = "Feeder.PivotApp.View.Converters.VisibilityConverter";
            _typeNameTable[15] = "Feeder.PivotApp.View.FeedEditDialog";
            _typeNameTable[16] = "Windows.UI.Xaml.Controls.ContentDialog";
            _typeNameTable[17] = "Windows.UI.Xaml.Controls.ContentControl";
            _typeNameTable[18] = "Feeder.Common.ViewModel.FeedEditViewModel";
            _typeNameTable[19] = "Feeder.PivotApp.View.Converters.ForegroundConverter";
            _typeNameTable[20] = "Feeder.PivotApp.View.SelectableFeedsControl";
            _typeNameTable[21] = "Feeder.PivotApp.View.CreateFeeds.SearchForFeedsView";
            _typeNameTable[22] = "Feeder.Common.Services.IFeedSearcher";
            _typeNameTable[23] = "System.Collections.ObjectModel.ObservableCollection`1<Feeder.Common.ViewModel.SearchResultViewModel>";
            _typeNameTable[24] = "System.Collections.ObjectModel.Collection`1<Feeder.Common.ViewModel.SearchResultViewModel>";
            _typeNameTable[25] = "Feeder.Common.ViewModel.SearchResultViewModel";
            _typeNameTable[26] = "Feeder.Common.ViewModel.BaseViewModel";
            _typeNameTable[27] = "Boolean";
            _typeNameTable[28] = "System.Nullable`1<Boolean>";
            _typeNameTable[29] = "System.ValueType";
            _typeNameTable[30] = "Feeder.DataModel.FeedModel";
            _typeNameTable[31] = "Feeder.PivotApp.View.Converters.DebugConverter";
            _typeNameTable[32] = "Feeder.PivotApp.View.Converters.SaveArticleVisibilityConverter";
            _typeNameTable[33] = "Feeder.PivotApp.View.FeedItemPage";
            _typeNameTable[34] = "Feeder.Common.ViewModel.FeedItemViewModel";
            _typeNameTable[35] = "Feeder.PivotApp.View.FeedPage";
            _typeNameTable[36] = "Feeder.Common.ViewModel.FeedViewModel";
            _typeNameTable[37] = "Feeder.Common.ViewModel.BaseListItem";
            _typeNameTable[38] = "Feeder.PivotApp.View.ItemsCountControl";
            _typeNameTable[39] = "Feeder.PivotApp.View.FeedsPage";
            _typeNameTable[40] = "Feeder.Common.ViewModel.FeederListViewModel`1<Feeder.Common.ViewModel.FeedViewModel>";
            _typeNameTable[41] = "System.Collections.ObjectModel.ObservableCollection`1<Feeder.Common.ViewModel.FeedViewModel>";
            _typeNameTable[42] = "System.Collections.ObjectModel.Collection`1<Feeder.Common.ViewModel.FeedViewModel>";
            _typeNameTable[43] = "System.Windows.Input.ICommand";
            _typeNameTable[44] = "System.Collections.ObjectModel.ObservableCollection`1<Feeder.Common.ViewModel.FeedItemViewModel>";
            _typeNameTable[45] = "System.Collections.ObjectModel.Collection`1<Feeder.Common.ViewModel.FeedItemViewModel>";
            _typeNameTable[46] = "Feeder.DataModel.FeedItemModel";
            _typeNameTable[47] = "Int32";
            _typeNameTable[48] = "Windows.UI.Xaml.Media.ImageSource";
            _typeNameTable[49] = "Windows.UI.Xaml.GridLength";
            _typeNameTable[50] = "System.Nullable`1<Int32>";
            _typeNameTable[51] = "Feeder.View.Converters.CountVisibilityConverter";
            _typeNameTable[52] = "Feeder.View.Converters.ReverseVisibilityConverter";
            _typeNameTable[53] = "Feeder.PivotApp.PivotPage";
            _typeNameTable[54] = "Feeder.Common.ViewModel.FeederListViewModel`1<Feeder.Common.ViewModel.FolderViewModel>";
            _typeNameTable[55] = "System.Collections.ObjectModel.ObservableCollection`1<Feeder.Common.ViewModel.FolderViewModel>";
            _typeNameTable[56] = "System.Collections.ObjectModel.Collection`1<Feeder.Common.ViewModel.FolderViewModel>";
            _typeNameTable[57] = "Feeder.Common.ViewModel.FolderViewModel";
            _typeNameTable[58] = "Feeder.Common.Model.FeedGroupModel";
            _typeNameTable[59] = "Feeder.Common.Repository.IFeedRepository";
            _typeNameTable[60] = "Feeder.PivotApp.View.Search.SearchPage";

            _typeTable = new global::System.Type[61];
            _typeTable[0] = typeof(global::Feeder.PivotApp.Settings.SettingsPage);
            _typeTable[1] = typeof(global::Windows.UI.Xaml.Controls.Page);
            _typeTable[2] = typeof(global::Windows.UI.Xaml.Controls.UserControl);
            _typeTable[3] = typeof(global::Feeder.PivotApp.Common.NavigationHelper);
            _typeTable[4] = typeof(global::Windows.UI.Xaml.DependencyObject);
            _typeTable[5] = typeof(global::Feeder.PivotApp.View.About.AboutPage);
            _typeTable[6] = typeof(global::Feeder.PivotApp.Common.ObservableDictionary);
            _typeTable[7] = typeof(global::System.Object);
            _typeTable[8] = typeof(global::System.String);
            _typeTable[9] = typeof(global::Feeder.PivotApp.View.Converters.IsReadConverter);
            _typeTable[10] = typeof(global::Feeder.PivotApp.View.Converters.ImageDisplayConverter);
            _typeTable[11] = typeof(global::Feeder.PivotApp.View.ArticlesControl);
            _typeTable[12] = typeof(global::Feeder.PivotApp.View.PopularFeedsControl);
            _typeTable[13] = typeof(global::Feeder.PivotApp.View.AddFromView);
            _typeTable[14] = typeof(global::Feeder.PivotApp.View.Converters.VisibilityConverter);
            _typeTable[15] = typeof(global::Feeder.PivotApp.View.FeedEditDialog);
            _typeTable[16] = typeof(global::Windows.UI.Xaml.Controls.ContentDialog);
            _typeTable[17] = typeof(global::Windows.UI.Xaml.Controls.ContentControl);
            _typeTable[18] = typeof(global::Feeder.Common.ViewModel.FeedEditViewModel);
            _typeTable[19] = typeof(global::Feeder.PivotApp.View.Converters.ForegroundConverter);
            _typeTable[20] = typeof(global::Feeder.PivotApp.View.SelectableFeedsControl);
            _typeTable[21] = typeof(global::Feeder.PivotApp.View.CreateFeeds.SearchForFeedsView);
            _typeTable[22] = typeof(global::Feeder.Common.Services.IFeedSearcher);
            _typeTable[23] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Feeder.Common.ViewModel.SearchResultViewModel>);
            _typeTable[24] = typeof(global::System.Collections.ObjectModel.Collection<global::Feeder.Common.ViewModel.SearchResultViewModel>);
            _typeTable[25] = typeof(global::Feeder.Common.ViewModel.SearchResultViewModel);
            _typeTable[26] = typeof(global::Feeder.Common.ViewModel.BaseViewModel);
            _typeTable[27] = typeof(global::System.Boolean);
            _typeTable[28] = typeof(global::System.Nullable<global::System.Boolean>);
            _typeTable[29] = typeof(global::System.ValueType);
            _typeTable[30] = typeof(global::Feeder.DataModel.FeedModel);
            _typeTable[31] = typeof(global::Feeder.PivotApp.View.Converters.DebugConverter);
            _typeTable[32] = typeof(global::Feeder.PivotApp.View.Converters.SaveArticleVisibilityConverter);
            _typeTable[33] = typeof(global::Feeder.PivotApp.View.FeedItemPage);
            _typeTable[34] = typeof(global::Feeder.Common.ViewModel.FeedItemViewModel);
            _typeTable[35] = typeof(global::Feeder.PivotApp.View.FeedPage);
            _typeTable[36] = typeof(global::Feeder.Common.ViewModel.FeedViewModel);
            _typeTable[37] = typeof(global::Feeder.Common.ViewModel.BaseListItem);
            _typeTable[38] = typeof(global::Feeder.PivotApp.View.ItemsCountControl);
            _typeTable[39] = typeof(global::Feeder.PivotApp.View.FeedsPage);
            _typeTable[40] = typeof(global::Feeder.Common.ViewModel.FeederListViewModel<global::Feeder.Common.ViewModel.FeedViewModel>);
            _typeTable[41] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Feeder.Common.ViewModel.FeedViewModel>);
            _typeTable[42] = typeof(global::System.Collections.ObjectModel.Collection<global::Feeder.Common.ViewModel.FeedViewModel>);
            _typeTable[43] = typeof(global::System.Windows.Input.ICommand);
            _typeTable[44] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Feeder.Common.ViewModel.FeedItemViewModel>);
            _typeTable[45] = typeof(global::System.Collections.ObjectModel.Collection<global::Feeder.Common.ViewModel.FeedItemViewModel>);
            _typeTable[46] = typeof(global::Feeder.DataModel.FeedItemModel);
            _typeTable[47] = typeof(global::System.Int32);
            _typeTable[48] = typeof(global::Windows.UI.Xaml.Media.ImageSource);
            _typeTable[49] = typeof(global::Windows.UI.Xaml.GridLength);
            _typeTable[50] = typeof(global::System.Nullable<global::System.Int32>);
            _typeTable[51] = typeof(global::Feeder.View.Converters.CountVisibilityConverter);
            _typeTable[52] = typeof(global::Feeder.View.Converters.ReverseVisibilityConverter);
            _typeTable[53] = typeof(global::Feeder.PivotApp.PivotPage);
            _typeTable[54] = typeof(global::Feeder.Common.ViewModel.FeederListViewModel<global::Feeder.Common.ViewModel.FolderViewModel>);
            _typeTable[55] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Feeder.Common.ViewModel.FolderViewModel>);
            _typeTable[56] = typeof(global::System.Collections.ObjectModel.Collection<global::Feeder.Common.ViewModel.FolderViewModel>);
            _typeTable[57] = typeof(global::Feeder.Common.ViewModel.FolderViewModel);
            _typeTable[58] = typeof(global::Feeder.Common.Model.FeedGroupModel);
            _typeTable[59] = typeof(global::Feeder.Common.Repository.IFeedRepository);
            _typeTable[60] = typeof(global::Feeder.PivotApp.View.Search.SearchPage);
        }

        private int LookupTypeIndexByName(string typeName)
        {
            if (_typeNameTable == null)
            {
                InitTypeTables();
            }
            for (int i=0; i<_typeNameTable.Length; i++)
            {
                if(0 == string.CompareOrdinal(_typeNameTable[i], typeName))
                {
                    return i;
                }
            }
            return -1;
        }

        private int LookupTypeIndexByType(global::System.Type type)
        {
            if (_typeTable == null)
            {
                InitTypeTables();
            }
            for(int i=0; i<_typeTable.Length; i++)
            {
                if(type == _typeTable[i])
                {
                    return i;
                }
            }
            return -1;
        }

        private object Activate_0_SettingsPage() { return new global::Feeder.PivotApp.Settings.SettingsPage(); }
        private object Activate_5_AboutPage() { return new global::Feeder.PivotApp.View.About.AboutPage(); }
        private object Activate_6_ObservableDictionary() { return new global::Feeder.PivotApp.Common.ObservableDictionary(); }
        private object Activate_9_IsReadConverter() { return new global::Feeder.PivotApp.View.Converters.IsReadConverter(); }
        private object Activate_10_ImageDisplayConverter() { return new global::Feeder.PivotApp.View.Converters.ImageDisplayConverter(); }
        private object Activate_11_ArticlesControl() { return new global::Feeder.PivotApp.View.ArticlesControl(); }
        private object Activate_12_PopularFeedsControl() { return new global::Feeder.PivotApp.View.PopularFeedsControl(); }
        private object Activate_13_AddFromView() { return new global::Feeder.PivotApp.View.AddFromView(); }
        private object Activate_14_VisibilityConverter() { return new global::Feeder.PivotApp.View.Converters.VisibilityConverter(); }
        private object Activate_15_FeedEditDialog() { return new global::Feeder.PivotApp.View.FeedEditDialog(); }
        private object Activate_18_FeedEditViewModel() { return new global::Feeder.Common.ViewModel.FeedEditViewModel(); }
        private object Activate_19_ForegroundConverter() { return new global::Feeder.PivotApp.View.Converters.ForegroundConverter(); }
        private object Activate_20_SelectableFeedsControl() { return new global::Feeder.PivotApp.View.SelectableFeedsControl(); }
        private object Activate_21_SearchForFeedsView() { return new global::Feeder.PivotApp.View.CreateFeeds.SearchForFeedsView(); }
        private object Activate_23_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Feeder.Common.ViewModel.SearchResultViewModel>(); }
        private object Activate_24_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Feeder.Common.ViewModel.SearchResultViewModel>(); }
        private object Activate_25_SearchResultViewModel() { return new global::Feeder.Common.ViewModel.SearchResultViewModel(); }
        private object Activate_30_FeedModel() { return new global::Feeder.DataModel.FeedModel(); }
        private object Activate_31_DebugConverter() { return new global::Feeder.PivotApp.View.Converters.DebugConverter(); }
        private object Activate_32_SaveArticleVisibilityConverter() { return new global::Feeder.PivotApp.View.Converters.SaveArticleVisibilityConverter(); }
        private object Activate_33_FeedItemPage() { return new global::Feeder.PivotApp.View.FeedItemPage(); }
        private object Activate_34_FeedItemViewModel() { return new global::Feeder.Common.ViewModel.FeedItemViewModel(); }
        private object Activate_35_FeedPage() { return new global::Feeder.PivotApp.View.FeedPage(); }
        private object Activate_36_FeedViewModel() { return new global::Feeder.Common.ViewModel.FeedViewModel(); }
        private object Activate_38_ItemsCountControl() { return new global::Feeder.PivotApp.View.ItemsCountControl(); }
        private object Activate_39_FeedsPage() { return new global::Feeder.PivotApp.View.FeedsPage(); }
        private object Activate_40_FeederListViewModel() { return new global::Feeder.Common.ViewModel.FeederListViewModel<global::Feeder.Common.ViewModel.FeedViewModel>(); }
        private object Activate_41_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Feeder.Common.ViewModel.FeedViewModel>(); }
        private object Activate_42_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Feeder.Common.ViewModel.FeedViewModel>(); }
        private object Activate_44_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Feeder.Common.ViewModel.FeedItemViewModel>(); }
        private object Activate_45_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Feeder.Common.ViewModel.FeedItemViewModel>(); }
        private object Activate_46_FeedItemModel() { return new global::Feeder.DataModel.FeedItemModel(); }
        private object Activate_51_CountVisibilityConverter() { return new global::Feeder.View.Converters.CountVisibilityConverter(); }
        private object Activate_52_ReverseVisibilityConverter() { return new global::Feeder.View.Converters.ReverseVisibilityConverter(); }
        private object Activate_53_PivotPage() { return new global::Feeder.PivotApp.PivotPage(); }
        private object Activate_54_FeederListViewModel() { return new global::Feeder.Common.ViewModel.FeederListViewModel<global::Feeder.Common.ViewModel.FolderViewModel>(); }
        private object Activate_55_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Feeder.Common.ViewModel.FolderViewModel>(); }
        private object Activate_56_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Feeder.Common.ViewModel.FolderViewModel>(); }
        private object Activate_57_FolderViewModel() { return new global::Feeder.Common.ViewModel.FolderViewModel(); }
        private object Activate_58_FeedGroupModel() { return new global::Feeder.Common.Model.FeedGroupModel(); }
        private object Activate_60_SearchPage() { return new global::Feeder.PivotApp.View.Search.SearchPage(); }
        private void MapAdd_6_ObservableDictionary(object instance, object key, object item)
        {
            var collection = (global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>)instance;
            var newKey = (global::System.String)key;
            var newItem = (global::System.Object)item;
            collection.Add(newKey, newItem);
        }
        private void VectorAdd_23_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Feeder.Common.ViewModel.SearchResultViewModel>)instance;
            var newItem = (global::Feeder.Common.ViewModel.SearchResultViewModel)item;
            collection.Add(newItem);
        }
        private void VectorAdd_24_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Feeder.Common.ViewModel.SearchResultViewModel>)instance;
            var newItem = (global::Feeder.Common.ViewModel.SearchResultViewModel)item;
            collection.Add(newItem);
        }
        private void VectorAdd_40_FeederListViewModel(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Feeder.Common.ViewModel.FeedViewModel>)instance;
            var newItem = (global::Feeder.Common.ViewModel.FeedViewModel)item;
            collection.Add(newItem);
        }
        private void VectorAdd_41_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Feeder.Common.ViewModel.FeedViewModel>)instance;
            var newItem = (global::Feeder.Common.ViewModel.FeedViewModel)item;
            collection.Add(newItem);
        }
        private void VectorAdd_42_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Feeder.Common.ViewModel.FeedViewModel>)instance;
            var newItem = (global::Feeder.Common.ViewModel.FeedViewModel)item;
            collection.Add(newItem);
        }
        private void VectorAdd_44_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Feeder.Common.ViewModel.FeedItemViewModel>)instance;
            var newItem = (global::Feeder.Common.ViewModel.FeedItemViewModel)item;
            collection.Add(newItem);
        }
        private void VectorAdd_45_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Feeder.Common.ViewModel.FeedItemViewModel>)instance;
            var newItem = (global::Feeder.Common.ViewModel.FeedItemViewModel)item;
            collection.Add(newItem);
        }
        private void VectorAdd_54_FeederListViewModel(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Feeder.Common.ViewModel.FolderViewModel>)instance;
            var newItem = (global::Feeder.Common.ViewModel.FolderViewModel)item;
            collection.Add(newItem);
        }
        private void VectorAdd_55_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Feeder.Common.ViewModel.FolderViewModel>)instance;
            var newItem = (global::Feeder.Common.ViewModel.FolderViewModel)item;
            collection.Add(newItem);
        }
        private void VectorAdd_56_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Feeder.Common.ViewModel.FolderViewModel>)instance;
            var newItem = (global::Feeder.Common.ViewModel.FolderViewModel)item;
            collection.Add(newItem);
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CreateXamlType(int typeIndex)
        {
            global::Feeder.FeederApp_XamlTypeInfo.XamlSystemBaseType xamlType = null;
            global::Feeder.FeederApp_XamlTypeInfo.XamlUserType userType;
            string typeName = _typeNameTable[typeIndex];
            global::System.Type type = _typeTable[typeIndex];

            switch (typeIndex)
            {

            case 0:   //  Feeder.PivotApp.Settings.SettingsPage
                userType = new global::Feeder.FeederApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_0_SettingsPage;
                userType.AddMemberName("NavigationHelper");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 1:   //  Windows.UI.Xaml.Controls.Page
                xamlType = new global::Feeder.FeederApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 2:   //  Windows.UI.Xaml.Controls.UserControl
                xamlType = new global::Feeder.FeederApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 3:   //  Feeder.PivotApp.Common.NavigationHelper
                userType = new global::Feeder.FeederApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 4:   //  Windows.UI.Xaml.DependencyObject
                xamlType = new global::Feeder.FeederApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 5:   //  Feeder.PivotApp.View.About.AboutPage
                userType = new global::Feeder.FeederApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_5_AboutPage;
                userType.AddMemberName("NavigationHelper");
                userType.AddMemberName("DefaultViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 6:   //  Feeder.PivotApp.Common.ObservableDictionary
                userType = new global::Feeder.FeederApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.DictionaryAdd = MapAdd_6_ObservableDictionary;
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 7:   //  Object
                xamlType = new global::Feeder.FeederApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 8:   //  String
                xamlType = new global::Feeder.FeederApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 9:   //  Feeder.PivotApp.View.Converters.IsReadConverter
                userType = new global::Feeder.FeederApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_9_IsReadConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 10:   //  Feeder.PivotApp.View.Converters.ImageDisplayConverter
                userType = new global::Feeder.FeederApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_10_ImageDisplayConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 11:   //  Feeder.PivotApp.View.ArticlesControl
                userType = new global::Feeder.FeederApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_11_ArticlesControl;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 12:   //  Feeder.PivotApp.View.PopularFeedsControl
                userType = new global::Feeder.FeederApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_12_PopularFeedsControl;
                userType.AddMemberName("Feeds");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 13:   //  Feeder.PivotApp.View.AddFromView
                userType = new global::Feeder.FeederApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_13_AddFromView;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 14:   //  Feeder.PivotApp.View.Converters.VisibilityConverter
                userType = new global::Feeder.FeederApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_14_VisibilityConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 15:   //  Feeder.PivotApp.View.FeedEditDialog
                userType = new global::Feeder.FeederApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.ContentDialog"));
                userType.Activator = Activate_15_FeedEditDialog;
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 16:   //  Windows.UI.Xaml.Controls.ContentDialog
                xamlType = new global::Feeder.FeederApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 17:   //  Windows.UI.Xaml.Controls.ContentControl
                xamlType = new global::Feeder.FeederApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 18:   //  Feeder.Common.ViewModel.FeedEditViewModel
                userType = new global::Feeder.FeederApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 19:   //  Feeder.PivotApp.View.Converters.ForegroundConverter
                userType = new global::Feeder.FeederApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_19_ForegroundConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 20:   //  Feeder.PivotApp.View.SelectableFeedsControl
                userType = new global::Feeder.FeederApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_20_SelectableFeedsControl;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 21:   //  Feeder.PivotApp.View.CreateFeeds.SearchForFeedsView
                userType = new global::Feeder.FeederApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_21_SearchForFeedsView;
                userType.AddMemberName("FeedSearcher");
                userType.AddMemberName("Feeds");
                userType.AddMemberName("NavigationHelper");
                userType.AddMemberName("DefaultViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 22:   //  Feeder.Common.Services.IFeedSearcher
                userType = new global::Feeder.FeederApp_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 23:   //  System.Collections.ObjectModel.ObservableCollection`1<Feeder.Common.ViewModel.SearchResultViewModel>
                userType = new global::Feeder.FeederApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Feeder.Common.ViewModel.SearchResultViewModel>"));
                userType.CollectionAdd = VectorAdd_23_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 24:   //  System.Collections.ObjectModel.Collection`1<Feeder.Common.ViewModel.SearchResultViewModel>
                userType = new global::Feeder.FeederApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_24_Collection;
                userType.CollectionAdd = VectorAdd_24_Collection;
                xamlType = userType;
                break;

            case 25:   //  Feeder.Common.ViewModel.SearchResultViewModel
                userType = new global::Feeder.FeederApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Feeder.Common.ViewModel.BaseViewModel"));
                userType.Activator = Activate_25_SearchResultViewModel;
                userType.AddMemberName("Exists");
                userType.AddMemberName("IsSelected");
                userType.AddMemberName("ImageUri");
                userType.AddMemberName("Title");
                userType.AddMemberName("Description");
                userType.AddMemberName("Model");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 26:   //  Feeder.Common.ViewModel.BaseViewModel
                userType = new global::Feeder.FeederApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 27:   //  Boolean
                xamlType = new global::Feeder.FeederApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 28:   //  System.Nullable`1<Boolean>
                userType = new global::Feeder.FeederApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 29:   //  System.ValueType
                userType = new global::Feeder.FeederApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 30:   //  Feeder.DataModel.FeedModel
                userType = new global::Feeder.FeederApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 31:   //  Feeder.PivotApp.View.Converters.DebugConverter
                userType = new global::Feeder.FeederApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_31_DebugConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 32:   //  Feeder.PivotApp.View.Converters.SaveArticleVisibilityConverter
                userType = new global::Feeder.FeederApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_32_SaveArticleVisibilityConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 33:   //  Feeder.PivotApp.View.FeedItemPage
                userType = new global::Feeder.FeederApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_33_FeedItemPage;
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 34:   //  Feeder.Common.ViewModel.FeedItemViewModel
                userType = new global::Feeder.FeederApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Feeder.Common.ViewModel.BaseViewModel"));
                userType.Activator = Activate_34_FeedItemViewModel;
                userType.AddMemberName("Model");
                userType.AddMemberName("Title");
                userType.AddMemberName("Subtitle");
                userType.AddMemberName("ShortDescription");
                userType.AddMemberName("ShortDescriptionHeight");
                userType.AddMemberName("IsRead");
                userType.AddMemberName("IsSaved");
                userType.AddMemberName("HeadlineImage");
                userType.AddMemberName("ImageColumnSize");
                userType.AddMemberName("Content");
                userType.AddMemberName("ItemUri");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 35:   //  Feeder.PivotApp.View.FeedPage
                userType = new global::Feeder.FeederApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_35_FeedPage;
                userType.AddMemberName("NavigationHelper");
                userType.AddMemberName("FeedViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 36:   //  Feeder.Common.ViewModel.FeedViewModel
                userType = new global::Feeder.FeederApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Feeder.Common.ViewModel.BaseListItem"));
                userType.Activator = Activate_36_FeedViewModel;
                userType.AddMemberName("SettingsCommand");
                userType.AddMemberName("UrlAddress");
                userType.AddMemberName("ParentFolderName");
                userType.AddMemberName("Filter");
                userType.AddMemberName("Model");
                userType.AddMemberName("Title");
                userType.AddMemberName("Items");
                userType.AddMemberName("ImageUri");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 37:   //  Feeder.Common.ViewModel.BaseListItem
                userType = new global::Feeder.FeederApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Feeder.Common.ViewModel.BaseViewModel"));
                userType.AddMemberName("Name");
                userType.AddMemberName("Summary");
                userType.AddMemberName("ItemsCount");
                userType.AddMemberName("SettingsCommand");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 38:   //  Feeder.PivotApp.View.ItemsCountControl
                userType = new global::Feeder.FeederApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_38_ItemsCountControl;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 39:   //  Feeder.PivotApp.View.FeedsPage
                userType = new global::Feeder.FeederApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_39_FeedsPage;
                userType.AddMemberName("NavigationHelper");
                userType.AddMemberName("DefaultViewModel");
                userType.AddMemberName("Feeds");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 40:   //  Feeder.Common.ViewModel.FeederListViewModel`1<Feeder.Common.ViewModel.FeedViewModel>
                userType = new global::Feeder.FeederApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.ObservableCollection`1<Feeder.Common.ViewModel.FeedViewModel>"));
                userType.CollectionAdd = VectorAdd_40_FeederListViewModel;
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 41:   //  System.Collections.ObjectModel.ObservableCollection`1<Feeder.Common.ViewModel.FeedViewModel>
                userType = new global::Feeder.FeederApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Feeder.Common.ViewModel.FeedViewModel>"));
                userType.Activator = Activate_41_ObservableCollection;
                userType.CollectionAdd = VectorAdd_41_ObservableCollection;
                xamlType = userType;
                break;

            case 42:   //  System.Collections.ObjectModel.Collection`1<Feeder.Common.ViewModel.FeedViewModel>
                userType = new global::Feeder.FeederApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_42_Collection;
                userType.CollectionAdd = VectorAdd_42_Collection;
                xamlType = userType;
                break;

            case 43:   //  System.Windows.Input.ICommand
                userType = new global::Feeder.FeederApp_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 44:   //  System.Collections.ObjectModel.ObservableCollection`1<Feeder.Common.ViewModel.FeedItemViewModel>
                userType = new global::Feeder.FeederApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Feeder.Common.ViewModel.FeedItemViewModel>"));
                userType.CollectionAdd = VectorAdd_44_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 45:   //  System.Collections.ObjectModel.Collection`1<Feeder.Common.ViewModel.FeedItemViewModel>
                userType = new global::Feeder.FeederApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_45_Collection;
                userType.CollectionAdd = VectorAdd_45_Collection;
                xamlType = userType;
                break;

            case 46:   //  Feeder.DataModel.FeedItemModel
                userType = new global::Feeder.FeederApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 47:   //  Int32
                xamlType = new global::Feeder.FeederApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 48:   //  Windows.UI.Xaml.Media.ImageSource
                xamlType = new global::Feeder.FeederApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 49:   //  Windows.UI.Xaml.GridLength
                xamlType = new global::Feeder.FeederApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 50:   //  System.Nullable`1<Int32>
                userType = new global::Feeder.FeederApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 51:   //  Feeder.View.Converters.CountVisibilityConverter
                userType = new global::Feeder.FeederApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_51_CountVisibilityConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 52:   //  Feeder.View.Converters.ReverseVisibilityConverter
                userType = new global::Feeder.FeederApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_52_ReverseVisibilityConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 53:   //  Feeder.PivotApp.PivotPage
                userType = new global::Feeder.FeederApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_53_PivotPage;
                userType.AddMemberName("NavigationHelper");
                userType.AddMemberName("DefaultViewModel");
                userType.AddMemberName("FeedGroups");
                userType.AddMemberName("ModelRepository");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 54:   //  Feeder.Common.ViewModel.FeederListViewModel`1<Feeder.Common.ViewModel.FolderViewModel>
                userType = new global::Feeder.FeederApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.ObservableCollection`1<Feeder.Common.ViewModel.FolderViewModel>"));
                userType.CollectionAdd = VectorAdd_54_FeederListViewModel;
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 55:   //  System.Collections.ObjectModel.ObservableCollection`1<Feeder.Common.ViewModel.FolderViewModel>
                userType = new global::Feeder.FeederApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Feeder.Common.ViewModel.FolderViewModel>"));
                userType.Activator = Activate_55_ObservableCollection;
                userType.CollectionAdd = VectorAdd_55_ObservableCollection;
                xamlType = userType;
                break;

            case 56:   //  System.Collections.ObjectModel.Collection`1<Feeder.Common.ViewModel.FolderViewModel>
                userType = new global::Feeder.FeederApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_56_Collection;
                userType.CollectionAdd = VectorAdd_56_Collection;
                xamlType = userType;
                break;

            case 57:   //  Feeder.Common.ViewModel.FolderViewModel
                userType = new global::Feeder.FeederApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Feeder.Common.ViewModel.BaseListItem"));
                userType.Activator = Activate_57_FolderViewModel;
                userType.AddMemberName("Name");
                userType.AddMemberName("Model");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 58:   //  Feeder.Common.Model.FeedGroupModel
                userType = new global::Feeder.FeederApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 59:   //  Feeder.Common.Repository.IFeedRepository
                userType = new global::Feeder.FeederApp_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 60:   //  Feeder.PivotApp.View.Search.SearchPage
                userType = new global::Feeder.FeederApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_60_SearchPage;
                userType.AddMemberName("NavigationHelper");
                userType.AddMemberName("DefaultViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;
            }
            return xamlType;
        }


        private object get_0_SettingsPage_NavigationHelper(object instance)
        {
            var that = (global::Feeder.PivotApp.Settings.SettingsPage)instance;
            return that.NavigationHelper;
        }
        private object get_1_AboutPage_NavigationHelper(object instance)
        {
            var that = (global::Feeder.PivotApp.View.About.AboutPage)instance;
            return that.NavigationHelper;
        }
        private object get_2_AboutPage_DefaultViewModel(object instance)
        {
            var that = (global::Feeder.PivotApp.View.About.AboutPage)instance;
            return that.DefaultViewModel;
        }
        private object get_3_PopularFeedsControl_Feeds(object instance)
        {
            var that = (global::Feeder.PivotApp.View.PopularFeedsControl)instance;
            return that.Feeds;
        }
        private object get_4_FeedEditDialog_ViewModel(object instance)
        {
            var that = (global::Feeder.PivotApp.View.FeedEditDialog)instance;
            return that.ViewModel;
        }
        private void set_4_FeedEditDialog_ViewModel(object instance, object Value)
        {
            var that = (global::Feeder.PivotApp.View.FeedEditDialog)instance;
            that.ViewModel = (global::Feeder.Common.ViewModel.FeedEditViewModel)Value;
        }
        private object get_5_SearchForFeedsView_FeedSearcher(object instance)
        {
            var that = (global::Feeder.PivotApp.View.CreateFeeds.SearchForFeedsView)instance;
            return that.FeedSearcher;
        }
        private object get_6_SearchForFeedsView_Feeds(object instance)
        {
            var that = (global::Feeder.PivotApp.View.CreateFeeds.SearchForFeedsView)instance;
            return that.Feeds;
        }
        private void set_6_SearchForFeedsView_Feeds(object instance, object Value)
        {
            var that = (global::Feeder.PivotApp.View.CreateFeeds.SearchForFeedsView)instance;
            that.Feeds = (global::System.Collections.ObjectModel.ObservableCollection<global::Feeder.Common.ViewModel.SearchResultViewModel>)Value;
        }
        private object get_7_SearchResultViewModel_Exists(object instance)
        {
            var that = (global::Feeder.Common.ViewModel.SearchResultViewModel)instance;
            return that.Exists;
        }
        private void set_7_SearchResultViewModel_Exists(object instance, object Value)
        {
            var that = (global::Feeder.Common.ViewModel.SearchResultViewModel)instance;
            that.Exists = (global::System.Boolean)Value;
        }
        private object get_8_SearchResultViewModel_IsSelected(object instance)
        {
            var that = (global::Feeder.Common.ViewModel.SearchResultViewModel)instance;
            return that.IsSelected;
        }
        private void set_8_SearchResultViewModel_IsSelected(object instance, object Value)
        {
            var that = (global::Feeder.Common.ViewModel.SearchResultViewModel)instance;
            that.IsSelected = (global::System.Nullable<global::System.Boolean>)Value;
        }
        private object get_9_SearchResultViewModel_ImageUri(object instance)
        {
            var that = (global::Feeder.Common.ViewModel.SearchResultViewModel)instance;
            return that.ImageUri;
        }
        private void set_9_SearchResultViewModel_ImageUri(object instance, object Value)
        {
            var that = (global::Feeder.Common.ViewModel.SearchResultViewModel)instance;
            that.ImageUri = (global::System.String)Value;
        }
        private object get_10_SearchResultViewModel_Title(object instance)
        {
            var that = (global::Feeder.Common.ViewModel.SearchResultViewModel)instance;
            return that.Title;
        }
        private void set_10_SearchResultViewModel_Title(object instance, object Value)
        {
            var that = (global::Feeder.Common.ViewModel.SearchResultViewModel)instance;
            that.Title = (global::System.String)Value;
        }
        private object get_11_SearchResultViewModel_Description(object instance)
        {
            var that = (global::Feeder.Common.ViewModel.SearchResultViewModel)instance;
            return that.Description;
        }
        private void set_11_SearchResultViewModel_Description(object instance, object Value)
        {
            var that = (global::Feeder.Common.ViewModel.SearchResultViewModel)instance;
            that.Description = (global::System.String)Value;
        }
        private object get_12_SearchResultViewModel_Model(object instance)
        {
            var that = (global::Feeder.Common.ViewModel.SearchResultViewModel)instance;
            return that.Model;
        }
        private void set_12_SearchResultViewModel_Model(object instance, object Value)
        {
            var that = (global::Feeder.Common.ViewModel.SearchResultViewModel)instance;
            that.Model = (global::Feeder.DataModel.FeedModel)Value;
        }
        private object get_13_SearchForFeedsView_NavigationHelper(object instance)
        {
            var that = (global::Feeder.PivotApp.View.CreateFeeds.SearchForFeedsView)instance;
            return that.NavigationHelper;
        }
        private object get_14_SearchForFeedsView_DefaultViewModel(object instance)
        {
            var that = (global::Feeder.PivotApp.View.CreateFeeds.SearchForFeedsView)instance;
            return that.DefaultViewModel;
        }
        private object get_15_FeedItemPage_ViewModel(object instance)
        {
            var that = (global::Feeder.PivotApp.View.FeedItemPage)instance;
            return that.ViewModel;
        }
        private object get_16_FeedPage_NavigationHelper(object instance)
        {
            var that = (global::Feeder.PivotApp.View.FeedPage)instance;
            return that.NavigationHelper;
        }
        private object get_17_FeedPage_FeedViewModel(object instance)
        {
            var that = (global::Feeder.PivotApp.View.FeedPage)instance;
            return that.FeedViewModel;
        }
        private void set_17_FeedPage_FeedViewModel(object instance, object Value)
        {
            var that = (global::Feeder.PivotApp.View.FeedPage)instance;
            that.FeedViewModel = (global::Feeder.Common.ViewModel.FeedViewModel)Value;
        }
        private object get_18_FeedsPage_NavigationHelper(object instance)
        {
            var that = (global::Feeder.PivotApp.View.FeedsPage)instance;
            return that.NavigationHelper;
        }
        private object get_19_FeedsPage_DefaultViewModel(object instance)
        {
            var that = (global::Feeder.PivotApp.View.FeedsPage)instance;
            return that.DefaultViewModel;
        }
        private object get_20_FeedsPage_Feeds(object instance)
        {
            var that = (global::Feeder.PivotApp.View.FeedsPage)instance;
            return that.Feeds;
        }
        private void set_20_FeedsPage_Feeds(object instance, object Value)
        {
            var that = (global::Feeder.PivotApp.View.FeedsPage)instance;
            that.Feeds = (global::Feeder.Common.ViewModel.FeederListViewModel<global::Feeder.Common.ViewModel.FeedViewModel>)Value;
        }
        private object get_21_FeedViewModel_SettingsCommand(object instance)
        {
            var that = (global::Feeder.Common.ViewModel.FeedViewModel)instance;
            return that.SettingsCommand;
        }
        private void set_21_FeedViewModel_SettingsCommand(object instance, object Value)
        {
            var that = (global::Feeder.Common.ViewModel.FeedViewModel)instance;
            that.SettingsCommand = (global::System.Windows.Input.ICommand)Value;
        }
        private object get_22_FeedViewModel_UrlAddress(object instance)
        {
            var that = (global::Feeder.Common.ViewModel.FeedViewModel)instance;
            return that.UrlAddress;
        }
        private void set_22_FeedViewModel_UrlAddress(object instance, object Value)
        {
            var that = (global::Feeder.Common.ViewModel.FeedViewModel)instance;
            that.UrlAddress = (global::System.String)Value;
        }
        private object get_23_FeedViewModel_ParentFolderName(object instance)
        {
            var that = (global::Feeder.Common.ViewModel.FeedViewModel)instance;
            return that.ParentFolderName;
        }
        private void set_23_FeedViewModel_ParentFolderName(object instance, object Value)
        {
            var that = (global::Feeder.Common.ViewModel.FeedViewModel)instance;
            that.ParentFolderName = (global::System.String)Value;
        }
        private object get_24_FeedViewModel_Filter(object instance)
        {
            var that = (global::Feeder.Common.ViewModel.FeedViewModel)instance;
            return that.Filter;
        }
        private void set_24_FeedViewModel_Filter(object instance, object Value)
        {
            var that = (global::Feeder.Common.ViewModel.FeedViewModel)instance;
            that.Filter = (global::System.String)Value;
        }
        private object get_25_FeedViewModel_Model(object instance)
        {
            var that = (global::Feeder.Common.ViewModel.FeedViewModel)instance;
            return that.Model;
        }
        private void set_25_FeedViewModel_Model(object instance, object Value)
        {
            var that = (global::Feeder.Common.ViewModel.FeedViewModel)instance;
            that.Model = (global::Feeder.DataModel.FeedModel)Value;
        }
        private object get_26_FeedViewModel_Title(object instance)
        {
            var that = (global::Feeder.Common.ViewModel.FeedViewModel)instance;
            return that.Title;
        }
        private void set_26_FeedViewModel_Title(object instance, object Value)
        {
            var that = (global::Feeder.Common.ViewModel.FeedViewModel)instance;
            that.Title = (global::System.String)Value;
        }
        private object get_27_FeedViewModel_Items(object instance)
        {
            var that = (global::Feeder.Common.ViewModel.FeedViewModel)instance;
            return that.Items;
        }
        private void set_27_FeedViewModel_Items(object instance, object Value)
        {
            var that = (global::Feeder.Common.ViewModel.FeedViewModel)instance;
            that.Items = (global::System.Collections.ObjectModel.ObservableCollection<global::Feeder.Common.ViewModel.FeedItemViewModel>)Value;
        }
        private object get_28_FeedItemViewModel_Model(object instance)
        {
            var that = (global::Feeder.Common.ViewModel.FeedItemViewModel)instance;
            return that.Model;
        }
        private void set_28_FeedItemViewModel_Model(object instance, object Value)
        {
            var that = (global::Feeder.Common.ViewModel.FeedItemViewModel)instance;
            that.Model = (global::Feeder.DataModel.FeedItemModel)Value;
        }
        private object get_29_FeedItemViewModel_Title(object instance)
        {
            var that = (global::Feeder.Common.ViewModel.FeedItemViewModel)instance;
            return that.Title;
        }
        private void set_29_FeedItemViewModel_Title(object instance, object Value)
        {
            var that = (global::Feeder.Common.ViewModel.FeedItemViewModel)instance;
            that.Title = (global::System.String)Value;
        }
        private object get_30_FeedItemViewModel_Subtitle(object instance)
        {
            var that = (global::Feeder.Common.ViewModel.FeedItemViewModel)instance;
            return that.Subtitle;
        }
        private void set_30_FeedItemViewModel_Subtitle(object instance, object Value)
        {
            var that = (global::Feeder.Common.ViewModel.FeedItemViewModel)instance;
            that.Subtitle = (global::System.String)Value;
        }
        private object get_31_FeedItemViewModel_ShortDescription(object instance)
        {
            var that = (global::Feeder.Common.ViewModel.FeedItemViewModel)instance;
            return that.ShortDescription;
        }
        private object get_32_FeedItemViewModel_ShortDescriptionHeight(object instance)
        {
            var that = (global::Feeder.Common.ViewModel.FeedItemViewModel)instance;
            return that.ShortDescriptionHeight;
        }
        private void set_32_FeedItemViewModel_ShortDescriptionHeight(object instance, object Value)
        {
            var that = (global::Feeder.Common.ViewModel.FeedItemViewModel)instance;
            that.ShortDescriptionHeight = (global::System.Int32)Value;
        }
        private object get_33_FeedItemViewModel_IsRead(object instance)
        {
            var that = (global::Feeder.Common.ViewModel.FeedItemViewModel)instance;
            return that.IsRead;
        }
        private void set_33_FeedItemViewModel_IsRead(object instance, object Value)
        {
            var that = (global::Feeder.Common.ViewModel.FeedItemViewModel)instance;
            that.IsRead = (global::System.Boolean)Value;
        }
        private object get_34_FeedItemViewModel_IsSaved(object instance)
        {
            var that = (global::Feeder.Common.ViewModel.FeedItemViewModel)instance;
            return that.IsSaved;
        }
        private void set_34_FeedItemViewModel_IsSaved(object instance, object Value)
        {
            var that = (global::Feeder.Common.ViewModel.FeedItemViewModel)instance;
            that.IsSaved = (global::System.Boolean)Value;
        }
        private object get_35_FeedItemViewModel_HeadlineImage(object instance)
        {
            var that = (global::Feeder.Common.ViewModel.FeedItemViewModel)instance;
            return that.HeadlineImage;
        }
        private void set_35_FeedItemViewModel_HeadlineImage(object instance, object Value)
        {
            var that = (global::Feeder.Common.ViewModel.FeedItemViewModel)instance;
            that.HeadlineImage = (global::Windows.UI.Xaml.Media.ImageSource)Value;
        }
        private object get_36_FeedItemViewModel_ImageColumnSize(object instance)
        {
            var that = (global::Feeder.Common.ViewModel.FeedItemViewModel)instance;
            return that.ImageColumnSize;
        }
        private void set_36_FeedItemViewModel_ImageColumnSize(object instance, object Value)
        {
            var that = (global::Feeder.Common.ViewModel.FeedItemViewModel)instance;
            that.ImageColumnSize = (global::Windows.UI.Xaml.GridLength)Value;
        }
        private object get_37_FeedItemViewModel_Content(object instance)
        {
            var that = (global::Feeder.Common.ViewModel.FeedItemViewModel)instance;
            return that.Content;
        }
        private void set_37_FeedItemViewModel_Content(object instance, object Value)
        {
            var that = (global::Feeder.Common.ViewModel.FeedItemViewModel)instance;
            that.Content = (global::System.String)Value;
        }
        private object get_38_FeedItemViewModel_ItemUri(object instance)
        {
            var that = (global::Feeder.Common.ViewModel.FeedItemViewModel)instance;
            return that.ItemUri;
        }
        private object get_39_FeedViewModel_ImageUri(object instance)
        {
            var that = (global::Feeder.Common.ViewModel.FeedViewModel)instance;
            return that.ImageUri;
        }
        private void set_39_FeedViewModel_ImageUri(object instance, object Value)
        {
            var that = (global::Feeder.Common.ViewModel.FeedViewModel)instance;
            that.ImageUri = (global::System.String)Value;
        }
        private object get_40_BaseListItem_Name(object instance)
        {
            var that = (global::Feeder.Common.ViewModel.BaseListItem)instance;
            return that.Name;
        }
        private void set_40_BaseListItem_Name(object instance, object Value)
        {
            var that = (global::Feeder.Common.ViewModel.BaseListItem)instance;
            that.Name = (global::System.String)Value;
        }
        private object get_41_BaseListItem_Summary(object instance)
        {
            var that = (global::Feeder.Common.ViewModel.BaseListItem)instance;
            return that.Summary;
        }
        private void set_41_BaseListItem_Summary(object instance, object Value)
        {
            var that = (global::Feeder.Common.ViewModel.BaseListItem)instance;
            that.Summary = (global::System.String)Value;
        }
        private object get_42_BaseListItem_ItemsCount(object instance)
        {
            var that = (global::Feeder.Common.ViewModel.BaseListItem)instance;
            return that.ItemsCount;
        }
        private void set_42_BaseListItem_ItemsCount(object instance, object Value)
        {
            var that = (global::Feeder.Common.ViewModel.BaseListItem)instance;
            that.ItemsCount = (global::System.Nullable<global::System.Int32>)Value;
        }
        private object get_43_PivotPage_NavigationHelper(object instance)
        {
            var that = (global::Feeder.PivotApp.PivotPage)instance;
            return that.NavigationHelper;
        }
        private object get_44_PivotPage_DefaultViewModel(object instance)
        {
            var that = (global::Feeder.PivotApp.PivotPage)instance;
            return that.DefaultViewModel;
        }
        private object get_45_PivotPage_FeedGroups(object instance)
        {
            var that = (global::Feeder.PivotApp.PivotPage)instance;
            return that.FeedGroups;
        }
        private void set_45_PivotPage_FeedGroups(object instance, object Value)
        {
            var that = (global::Feeder.PivotApp.PivotPage)instance;
            that.FeedGroups = (global::Feeder.Common.ViewModel.FeederListViewModel<global::Feeder.Common.ViewModel.FolderViewModel>)Value;
        }
        private object get_46_FolderViewModel_Name(object instance)
        {
            var that = (global::Feeder.Common.ViewModel.FolderViewModel)instance;
            return that.Name;
        }
        private void set_46_FolderViewModel_Name(object instance, object Value)
        {
            var that = (global::Feeder.Common.ViewModel.FolderViewModel)instance;
            that.Name = (global::System.String)Value;
        }
        private object get_47_FolderViewModel_Model(object instance)
        {
            var that = (global::Feeder.Common.ViewModel.FolderViewModel)instance;
            return that.Model;
        }
        private void set_47_FolderViewModel_Model(object instance, object Value)
        {
            var that = (global::Feeder.Common.ViewModel.FolderViewModel)instance;
            that.Model = (global::Feeder.Common.Model.FeedGroupModel)Value;
        }
        private object get_48_BaseListItem_SettingsCommand(object instance)
        {
            var that = (global::Feeder.Common.ViewModel.BaseListItem)instance;
            return that.SettingsCommand;
        }
        private void set_48_BaseListItem_SettingsCommand(object instance, object Value)
        {
            var that = (global::Feeder.Common.ViewModel.BaseListItem)instance;
            that.SettingsCommand = (global::System.Windows.Input.ICommand)Value;
        }
        private object get_49_PivotPage_ModelRepository(object instance)
        {
            var that = (global::Feeder.PivotApp.PivotPage)instance;
            return that.ModelRepository;
        }
        private object get_50_SearchPage_NavigationHelper(object instance)
        {
            var that = (global::Feeder.PivotApp.View.Search.SearchPage)instance;
            return that.NavigationHelper;
        }
        private object get_51_SearchPage_DefaultViewModel(object instance)
        {
            var that = (global::Feeder.PivotApp.View.Search.SearchPage)instance;
            return that.DefaultViewModel;
        }

        private global::Windows.UI.Xaml.Markup.IXamlMember CreateXamlMember(string longMemberName)
        {
            global::Feeder.FeederApp_XamlTypeInfo.XamlMember xamlMember = null;
            global::Feeder.FeederApp_XamlTypeInfo.XamlUserType userType;

            switch (longMemberName)
            {
            case "Feeder.PivotApp.Settings.SettingsPage.NavigationHelper":
                userType = (global::Feeder.FeederApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Feeder.PivotApp.Settings.SettingsPage");
                xamlMember = new global::Feeder.FeederApp_XamlTypeInfo.XamlMember(this, "NavigationHelper", "Feeder.PivotApp.Common.NavigationHelper");
                xamlMember.Getter = get_0_SettingsPage_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "Feeder.PivotApp.View.About.AboutPage.NavigationHelper":
                userType = (global::Feeder.FeederApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Feeder.PivotApp.View.About.AboutPage");
                xamlMember = new global::Feeder.FeederApp_XamlTypeInfo.XamlMember(this, "NavigationHelper", "Feeder.PivotApp.Common.NavigationHelper");
                xamlMember.Getter = get_1_AboutPage_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "Feeder.PivotApp.View.About.AboutPage.DefaultViewModel":
                userType = (global::Feeder.FeederApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Feeder.PivotApp.View.About.AboutPage");
                xamlMember = new global::Feeder.FeederApp_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "Feeder.PivotApp.Common.ObservableDictionary");
                xamlMember.Getter = get_2_AboutPage_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "Feeder.PivotApp.View.PopularFeedsControl.Feeds":
                userType = (global::Feeder.FeederApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Feeder.PivotApp.View.PopularFeedsControl");
                xamlMember = new global::Feeder.FeederApp_XamlTypeInfo.XamlMember(this, "Feeds", "Feeder.PivotApp.Common.ObservableDictionary");
                xamlMember.Getter = get_3_PopularFeedsControl_Feeds;
                xamlMember.SetIsReadOnly();
                break;
            case "Feeder.PivotApp.View.FeedEditDialog.ViewModel":
                userType = (global::Feeder.FeederApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Feeder.PivotApp.View.FeedEditDialog");
                xamlMember = new global::Feeder.FeederApp_XamlTypeInfo.XamlMember(this, "ViewModel", "Feeder.Common.ViewModel.FeedEditViewModel");
                xamlMember.Getter = get_4_FeedEditDialog_ViewModel;
                xamlMember.Setter = set_4_FeedEditDialog_ViewModel;
                break;
            case "Feeder.PivotApp.View.CreateFeeds.SearchForFeedsView.FeedSearcher":
                userType = (global::Feeder.FeederApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Feeder.PivotApp.View.CreateFeeds.SearchForFeedsView");
                xamlMember = new global::Feeder.FeederApp_XamlTypeInfo.XamlMember(this, "FeedSearcher", "Feeder.Common.Services.IFeedSearcher");
                xamlMember.Getter = get_5_SearchForFeedsView_FeedSearcher;
                xamlMember.SetIsReadOnly();
                break;
            case "Feeder.PivotApp.View.CreateFeeds.SearchForFeedsView.Feeds":
                userType = (global::Feeder.FeederApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Feeder.PivotApp.View.CreateFeeds.SearchForFeedsView");
                xamlMember = new global::Feeder.FeederApp_XamlTypeInfo.XamlMember(this, "Feeds", "System.Collections.ObjectModel.ObservableCollection`1<Feeder.Common.ViewModel.SearchResultViewModel>");
                xamlMember.Getter = get_6_SearchForFeedsView_Feeds;
                xamlMember.Setter = set_6_SearchForFeedsView_Feeds;
                break;
            case "Feeder.Common.ViewModel.SearchResultViewModel.Exists":
                userType = (global::Feeder.FeederApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Feeder.Common.ViewModel.SearchResultViewModel");
                xamlMember = new global::Feeder.FeederApp_XamlTypeInfo.XamlMember(this, "Exists", "Boolean");
                xamlMember.Getter = get_7_SearchResultViewModel_Exists;
                xamlMember.Setter = set_7_SearchResultViewModel_Exists;
                break;
            case "Feeder.Common.ViewModel.SearchResultViewModel.IsSelected":
                userType = (global::Feeder.FeederApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Feeder.Common.ViewModel.SearchResultViewModel");
                xamlMember = new global::Feeder.FeederApp_XamlTypeInfo.XamlMember(this, "IsSelected", "System.Nullable`1<Boolean>");
                xamlMember.Getter = get_8_SearchResultViewModel_IsSelected;
                xamlMember.Setter = set_8_SearchResultViewModel_IsSelected;
                break;
            case "Feeder.Common.ViewModel.SearchResultViewModel.ImageUri":
                userType = (global::Feeder.FeederApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Feeder.Common.ViewModel.SearchResultViewModel");
                xamlMember = new global::Feeder.FeederApp_XamlTypeInfo.XamlMember(this, "ImageUri", "String");
                xamlMember.Getter = get_9_SearchResultViewModel_ImageUri;
                xamlMember.Setter = set_9_SearchResultViewModel_ImageUri;
                break;
            case "Feeder.Common.ViewModel.SearchResultViewModel.Title":
                userType = (global::Feeder.FeederApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Feeder.Common.ViewModel.SearchResultViewModel");
                xamlMember = new global::Feeder.FeederApp_XamlTypeInfo.XamlMember(this, "Title", "String");
                xamlMember.Getter = get_10_SearchResultViewModel_Title;
                xamlMember.Setter = set_10_SearchResultViewModel_Title;
                break;
            case "Feeder.Common.ViewModel.SearchResultViewModel.Description":
                userType = (global::Feeder.FeederApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Feeder.Common.ViewModel.SearchResultViewModel");
                xamlMember = new global::Feeder.FeederApp_XamlTypeInfo.XamlMember(this, "Description", "String");
                xamlMember.Getter = get_11_SearchResultViewModel_Description;
                xamlMember.Setter = set_11_SearchResultViewModel_Description;
                break;
            case "Feeder.Common.ViewModel.SearchResultViewModel.Model":
                userType = (global::Feeder.FeederApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Feeder.Common.ViewModel.SearchResultViewModel");
                xamlMember = new global::Feeder.FeederApp_XamlTypeInfo.XamlMember(this, "Model", "Feeder.DataModel.FeedModel");
                xamlMember.Getter = get_12_SearchResultViewModel_Model;
                xamlMember.Setter = set_12_SearchResultViewModel_Model;
                break;
            case "Feeder.PivotApp.View.CreateFeeds.SearchForFeedsView.NavigationHelper":
                userType = (global::Feeder.FeederApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Feeder.PivotApp.View.CreateFeeds.SearchForFeedsView");
                xamlMember = new global::Feeder.FeederApp_XamlTypeInfo.XamlMember(this, "NavigationHelper", "Feeder.PivotApp.Common.NavigationHelper");
                xamlMember.Getter = get_13_SearchForFeedsView_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "Feeder.PivotApp.View.CreateFeeds.SearchForFeedsView.DefaultViewModel":
                userType = (global::Feeder.FeederApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Feeder.PivotApp.View.CreateFeeds.SearchForFeedsView");
                xamlMember = new global::Feeder.FeederApp_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "Feeder.PivotApp.Common.ObservableDictionary");
                xamlMember.Getter = get_14_SearchForFeedsView_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "Feeder.PivotApp.View.FeedItemPage.ViewModel":
                userType = (global::Feeder.FeederApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Feeder.PivotApp.View.FeedItemPage");
                xamlMember = new global::Feeder.FeederApp_XamlTypeInfo.XamlMember(this, "ViewModel", "Feeder.Common.ViewModel.FeedItemViewModel");
                xamlMember.Getter = get_15_FeedItemPage_ViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "Feeder.PivotApp.View.FeedPage.NavigationHelper":
                userType = (global::Feeder.FeederApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Feeder.PivotApp.View.FeedPage");
                xamlMember = new global::Feeder.FeederApp_XamlTypeInfo.XamlMember(this, "NavigationHelper", "Feeder.PivotApp.Common.NavigationHelper");
                xamlMember.Getter = get_16_FeedPage_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "Feeder.PivotApp.View.FeedPage.FeedViewModel":
                userType = (global::Feeder.FeederApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Feeder.PivotApp.View.FeedPage");
                xamlMember = new global::Feeder.FeederApp_XamlTypeInfo.XamlMember(this, "FeedViewModel", "Feeder.Common.ViewModel.FeedViewModel");
                xamlMember.Getter = get_17_FeedPage_FeedViewModel;
                xamlMember.Setter = set_17_FeedPage_FeedViewModel;
                break;
            case "Feeder.PivotApp.View.FeedsPage.NavigationHelper":
                userType = (global::Feeder.FeederApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Feeder.PivotApp.View.FeedsPage");
                xamlMember = new global::Feeder.FeederApp_XamlTypeInfo.XamlMember(this, "NavigationHelper", "Feeder.PivotApp.Common.NavigationHelper");
                xamlMember.Getter = get_18_FeedsPage_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "Feeder.PivotApp.View.FeedsPage.DefaultViewModel":
                userType = (global::Feeder.FeederApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Feeder.PivotApp.View.FeedsPage");
                xamlMember = new global::Feeder.FeederApp_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "Feeder.PivotApp.Common.ObservableDictionary");
                xamlMember.Getter = get_19_FeedsPage_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "Feeder.PivotApp.View.FeedsPage.Feeds":
                userType = (global::Feeder.FeederApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Feeder.PivotApp.View.FeedsPage");
                xamlMember = new global::Feeder.FeederApp_XamlTypeInfo.XamlMember(this, "Feeds", "Feeder.Common.ViewModel.FeederListViewModel`1<Feeder.Common.ViewModel.FeedViewModel>");
                xamlMember.Getter = get_20_FeedsPage_Feeds;
                xamlMember.Setter = set_20_FeedsPage_Feeds;
                break;
            case "Feeder.Common.ViewModel.FeedViewModel.SettingsCommand":
                userType = (global::Feeder.FeederApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Feeder.Common.ViewModel.FeedViewModel");
                xamlMember = new global::Feeder.FeederApp_XamlTypeInfo.XamlMember(this, "SettingsCommand", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_21_FeedViewModel_SettingsCommand;
                xamlMember.Setter = set_21_FeedViewModel_SettingsCommand;
                break;
            case "Feeder.Common.ViewModel.FeedViewModel.UrlAddress":
                userType = (global::Feeder.FeederApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Feeder.Common.ViewModel.FeedViewModel");
                xamlMember = new global::Feeder.FeederApp_XamlTypeInfo.XamlMember(this, "UrlAddress", "String");
                xamlMember.Getter = get_22_FeedViewModel_UrlAddress;
                xamlMember.Setter = set_22_FeedViewModel_UrlAddress;
                break;
            case "Feeder.Common.ViewModel.FeedViewModel.ParentFolderName":
                userType = (global::Feeder.FeederApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Feeder.Common.ViewModel.FeedViewModel");
                xamlMember = new global::Feeder.FeederApp_XamlTypeInfo.XamlMember(this, "ParentFolderName", "String");
                xamlMember.Getter = get_23_FeedViewModel_ParentFolderName;
                xamlMember.Setter = set_23_FeedViewModel_ParentFolderName;
                break;
            case "Feeder.Common.ViewModel.FeedViewModel.Filter":
                userType = (global::Feeder.FeederApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Feeder.Common.ViewModel.FeedViewModel");
                xamlMember = new global::Feeder.FeederApp_XamlTypeInfo.XamlMember(this, "Filter", "String");
                xamlMember.Getter = get_24_FeedViewModel_Filter;
                xamlMember.Setter = set_24_FeedViewModel_Filter;
                break;
            case "Feeder.Common.ViewModel.FeedViewModel.Model":
                userType = (global::Feeder.FeederApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Feeder.Common.ViewModel.FeedViewModel");
                xamlMember = new global::Feeder.FeederApp_XamlTypeInfo.XamlMember(this, "Model", "Feeder.DataModel.FeedModel");
                xamlMember.Getter = get_25_FeedViewModel_Model;
                xamlMember.Setter = set_25_FeedViewModel_Model;
                break;
            case "Feeder.Common.ViewModel.FeedViewModel.Title":
                userType = (global::Feeder.FeederApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Feeder.Common.ViewModel.FeedViewModel");
                xamlMember = new global::Feeder.FeederApp_XamlTypeInfo.XamlMember(this, "Title", "String");
                xamlMember.Getter = get_26_FeedViewModel_Title;
                xamlMember.Setter = set_26_FeedViewModel_Title;
                break;
            case "Feeder.Common.ViewModel.FeedViewModel.Items":
                userType = (global::Feeder.FeederApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Feeder.Common.ViewModel.FeedViewModel");
                xamlMember = new global::Feeder.FeederApp_XamlTypeInfo.XamlMember(this, "Items", "System.Collections.ObjectModel.ObservableCollection`1<Feeder.Common.ViewModel.FeedItemViewModel>");
                xamlMember.Getter = get_27_FeedViewModel_Items;
                xamlMember.Setter = set_27_FeedViewModel_Items;
                break;
            case "Feeder.Common.ViewModel.FeedItemViewModel.Model":
                userType = (global::Feeder.FeederApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Feeder.Common.ViewModel.FeedItemViewModel");
                xamlMember = new global::Feeder.FeederApp_XamlTypeInfo.XamlMember(this, "Model", "Feeder.DataModel.FeedItemModel");
                xamlMember.Getter = get_28_FeedItemViewModel_Model;
                xamlMember.Setter = set_28_FeedItemViewModel_Model;
                break;
            case "Feeder.Common.ViewModel.FeedItemViewModel.Title":
                userType = (global::Feeder.FeederApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Feeder.Common.ViewModel.FeedItemViewModel");
                xamlMember = new global::Feeder.FeederApp_XamlTypeInfo.XamlMember(this, "Title", "String");
                xamlMember.Getter = get_29_FeedItemViewModel_Title;
                xamlMember.Setter = set_29_FeedItemViewModel_Title;
                break;
            case "Feeder.Common.ViewModel.FeedItemViewModel.Subtitle":
                userType = (global::Feeder.FeederApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Feeder.Common.ViewModel.FeedItemViewModel");
                xamlMember = new global::Feeder.FeederApp_XamlTypeInfo.XamlMember(this, "Subtitle", "String");
                xamlMember.Getter = get_30_FeedItemViewModel_Subtitle;
                xamlMember.Setter = set_30_FeedItemViewModel_Subtitle;
                break;
            case "Feeder.Common.ViewModel.FeedItemViewModel.ShortDescription":
                userType = (global::Feeder.FeederApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Feeder.Common.ViewModel.FeedItemViewModel");
                xamlMember = new global::Feeder.FeederApp_XamlTypeInfo.XamlMember(this, "ShortDescription", "String");
                xamlMember.Getter = get_31_FeedItemViewModel_ShortDescription;
                xamlMember.SetIsReadOnly();
                break;
            case "Feeder.Common.ViewModel.FeedItemViewModel.ShortDescriptionHeight":
                userType = (global::Feeder.FeederApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Feeder.Common.ViewModel.FeedItemViewModel");
                xamlMember = new global::Feeder.FeederApp_XamlTypeInfo.XamlMember(this, "ShortDescriptionHeight", "Int32");
                xamlMember.Getter = get_32_FeedItemViewModel_ShortDescriptionHeight;
                xamlMember.Setter = set_32_FeedItemViewModel_ShortDescriptionHeight;
                break;
            case "Feeder.Common.ViewModel.FeedItemViewModel.IsRead":
                userType = (global::Feeder.FeederApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Feeder.Common.ViewModel.FeedItemViewModel");
                xamlMember = new global::Feeder.FeederApp_XamlTypeInfo.XamlMember(this, "IsRead", "Boolean");
                xamlMember.Getter = get_33_FeedItemViewModel_IsRead;
                xamlMember.Setter = set_33_FeedItemViewModel_IsRead;
                break;
            case "Feeder.Common.ViewModel.FeedItemViewModel.IsSaved":
                userType = (global::Feeder.FeederApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Feeder.Common.ViewModel.FeedItemViewModel");
                xamlMember = new global::Feeder.FeederApp_XamlTypeInfo.XamlMember(this, "IsSaved", "Boolean");
                xamlMember.Getter = get_34_FeedItemViewModel_IsSaved;
                xamlMember.Setter = set_34_FeedItemViewModel_IsSaved;
                break;
            case "Feeder.Common.ViewModel.FeedItemViewModel.HeadlineImage":
                userType = (global::Feeder.FeederApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Feeder.Common.ViewModel.FeedItemViewModel");
                xamlMember = new global::Feeder.FeederApp_XamlTypeInfo.XamlMember(this, "HeadlineImage", "Windows.UI.Xaml.Media.ImageSource");
                xamlMember.Getter = get_35_FeedItemViewModel_HeadlineImage;
                xamlMember.Setter = set_35_FeedItemViewModel_HeadlineImage;
                break;
            case "Feeder.Common.ViewModel.FeedItemViewModel.ImageColumnSize":
                userType = (global::Feeder.FeederApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Feeder.Common.ViewModel.FeedItemViewModel");
                xamlMember = new global::Feeder.FeederApp_XamlTypeInfo.XamlMember(this, "ImageColumnSize", "Windows.UI.Xaml.GridLength");
                xamlMember.Getter = get_36_FeedItemViewModel_ImageColumnSize;
                xamlMember.Setter = set_36_FeedItemViewModel_ImageColumnSize;
                break;
            case "Feeder.Common.ViewModel.FeedItemViewModel.Content":
                userType = (global::Feeder.FeederApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Feeder.Common.ViewModel.FeedItemViewModel");
                xamlMember = new global::Feeder.FeederApp_XamlTypeInfo.XamlMember(this, "Content", "String");
                xamlMember.Getter = get_37_FeedItemViewModel_Content;
                xamlMember.Setter = set_37_FeedItemViewModel_Content;
                break;
            case "Feeder.Common.ViewModel.FeedItemViewModel.ItemUri":
                userType = (global::Feeder.FeederApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Feeder.Common.ViewModel.FeedItemViewModel");
                xamlMember = new global::Feeder.FeederApp_XamlTypeInfo.XamlMember(this, "ItemUri", "String");
                xamlMember.Getter = get_38_FeedItemViewModel_ItemUri;
                xamlMember.SetIsReadOnly();
                break;
            case "Feeder.Common.ViewModel.FeedViewModel.ImageUri":
                userType = (global::Feeder.FeederApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Feeder.Common.ViewModel.FeedViewModel");
                xamlMember = new global::Feeder.FeederApp_XamlTypeInfo.XamlMember(this, "ImageUri", "String");
                xamlMember.Getter = get_39_FeedViewModel_ImageUri;
                xamlMember.Setter = set_39_FeedViewModel_ImageUri;
                break;
            case "Feeder.Common.ViewModel.BaseListItem.Name":
                userType = (global::Feeder.FeederApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Feeder.Common.ViewModel.BaseListItem");
                xamlMember = new global::Feeder.FeederApp_XamlTypeInfo.XamlMember(this, "Name", "String");
                xamlMember.Getter = get_40_BaseListItem_Name;
                xamlMember.Setter = set_40_BaseListItem_Name;
                break;
            case "Feeder.Common.ViewModel.BaseListItem.Summary":
                userType = (global::Feeder.FeederApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Feeder.Common.ViewModel.BaseListItem");
                xamlMember = new global::Feeder.FeederApp_XamlTypeInfo.XamlMember(this, "Summary", "String");
                xamlMember.Getter = get_41_BaseListItem_Summary;
                xamlMember.Setter = set_41_BaseListItem_Summary;
                break;
            case "Feeder.Common.ViewModel.BaseListItem.ItemsCount":
                userType = (global::Feeder.FeederApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Feeder.Common.ViewModel.BaseListItem");
                xamlMember = new global::Feeder.FeederApp_XamlTypeInfo.XamlMember(this, "ItemsCount", "System.Nullable`1<Int32>");
                xamlMember.Getter = get_42_BaseListItem_ItemsCount;
                xamlMember.Setter = set_42_BaseListItem_ItemsCount;
                break;
            case "Feeder.PivotApp.PivotPage.NavigationHelper":
                userType = (global::Feeder.FeederApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Feeder.PivotApp.PivotPage");
                xamlMember = new global::Feeder.FeederApp_XamlTypeInfo.XamlMember(this, "NavigationHelper", "Feeder.PivotApp.Common.NavigationHelper");
                xamlMember.Getter = get_43_PivotPage_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "Feeder.PivotApp.PivotPage.DefaultViewModel":
                userType = (global::Feeder.FeederApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Feeder.PivotApp.PivotPage");
                xamlMember = new global::Feeder.FeederApp_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "Feeder.PivotApp.Common.ObservableDictionary");
                xamlMember.Getter = get_44_PivotPage_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "Feeder.PivotApp.PivotPage.FeedGroups":
                userType = (global::Feeder.FeederApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Feeder.PivotApp.PivotPage");
                xamlMember = new global::Feeder.FeederApp_XamlTypeInfo.XamlMember(this, "FeedGroups", "Feeder.Common.ViewModel.FeederListViewModel`1<Feeder.Common.ViewModel.FolderViewModel>");
                xamlMember.Getter = get_45_PivotPage_FeedGroups;
                xamlMember.Setter = set_45_PivotPage_FeedGroups;
                break;
            case "Feeder.Common.ViewModel.FolderViewModel.Name":
                userType = (global::Feeder.FeederApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Feeder.Common.ViewModel.FolderViewModel");
                xamlMember = new global::Feeder.FeederApp_XamlTypeInfo.XamlMember(this, "Name", "String");
                xamlMember.Getter = get_46_FolderViewModel_Name;
                xamlMember.Setter = set_46_FolderViewModel_Name;
                break;
            case "Feeder.Common.ViewModel.FolderViewModel.Model":
                userType = (global::Feeder.FeederApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Feeder.Common.ViewModel.FolderViewModel");
                xamlMember = new global::Feeder.FeederApp_XamlTypeInfo.XamlMember(this, "Model", "Feeder.Common.Model.FeedGroupModel");
                xamlMember.Getter = get_47_FolderViewModel_Model;
                xamlMember.Setter = set_47_FolderViewModel_Model;
                break;
            case "Feeder.Common.ViewModel.BaseListItem.SettingsCommand":
                userType = (global::Feeder.FeederApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Feeder.Common.ViewModel.BaseListItem");
                xamlMember = new global::Feeder.FeederApp_XamlTypeInfo.XamlMember(this, "SettingsCommand", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_48_BaseListItem_SettingsCommand;
                xamlMember.Setter = set_48_BaseListItem_SettingsCommand;
                break;
            case "Feeder.PivotApp.PivotPage.ModelRepository":
                userType = (global::Feeder.FeederApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Feeder.PivotApp.PivotPage");
                xamlMember = new global::Feeder.FeederApp_XamlTypeInfo.XamlMember(this, "ModelRepository", "Feeder.Common.Repository.IFeedRepository");
                xamlMember.Getter = get_49_PivotPage_ModelRepository;
                xamlMember.SetIsReadOnly();
                break;
            case "Feeder.PivotApp.View.Search.SearchPage.NavigationHelper":
                userType = (global::Feeder.FeederApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Feeder.PivotApp.View.Search.SearchPage");
                xamlMember = new global::Feeder.FeederApp_XamlTypeInfo.XamlMember(this, "NavigationHelper", "Feeder.PivotApp.Common.NavigationHelper");
                xamlMember.Getter = get_50_SearchPage_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "Feeder.PivotApp.View.Search.SearchPage.DefaultViewModel":
                userType = (global::Feeder.FeederApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Feeder.PivotApp.View.Search.SearchPage");
                xamlMember = new global::Feeder.FeederApp_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "Feeder.PivotApp.Common.ObservableDictionary");
                xamlMember.Getter = get_51_SearchPage_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            }
            return xamlMember;
        }
    }

    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlSystemBaseType : global::Windows.UI.Xaml.Markup.IXamlType
    {
        string _fullName;
        global::System.Type _underlyingType;

        public XamlSystemBaseType(string fullName, global::System.Type underlyingType)
        {
            _fullName = fullName;
            _underlyingType = underlyingType;
        }

        public string FullName { get { return _fullName; } }

        public global::System.Type UnderlyingType
        {
            get
            {
                return _underlyingType;
            }
        }

        virtual public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name) { throw new global::System.NotImplementedException(); }
        virtual public bool IsArray { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsCollection { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsConstructible { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsDictionary { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsMarkupExtension { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsBindable { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsReturnTypeStub { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsLocalType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType ItemType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType KeyType { get { throw new global::System.NotImplementedException(); } }
        virtual public object ActivateInstance() { throw new global::System.NotImplementedException(); }
        virtual public void AddToMap(object instance, object key, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void AddToVector(object instance, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void RunInitializer()   { throw new global::System.NotImplementedException(); }
        virtual public object CreateFromString(string input)   { throw new global::System.NotImplementedException(); }
    }
    
    internal delegate object Activator();
    internal delegate void AddToCollection(object instance, object item);
    internal delegate void AddToDictionary(object instance, object key, object item);

    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlUserType : global::Feeder.FeederApp_XamlTypeInfo.XamlSystemBaseType
    {
        global::Feeder.FeederApp_XamlTypeInfo.XamlTypeInfoProvider _provider;
        global::Windows.UI.Xaml.Markup.IXamlType _baseType;
        bool _isArray;
        bool _isMarkupExtension;
        bool _isBindable;
        bool _isReturnTypeStub;
        bool _isLocalType;

        string _contentPropertyName;
        string _itemTypeName;
        string _keyTypeName;
        global::System.Collections.Generic.Dictionary<string, string> _memberNames;
        global::System.Collections.Generic.Dictionary<string, object> _enumValues;

        public XamlUserType(global::Feeder.FeederApp_XamlTypeInfo.XamlTypeInfoProvider provider, string fullName, global::System.Type fullType, global::Windows.UI.Xaml.Markup.IXamlType baseType)
            :base(fullName, fullType)
        {
            _provider = provider;
            _baseType = baseType;
        }

        // --- Interface methods ----

        override public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { return _baseType; } }
        override public bool IsArray { get { return _isArray; } }
        override public bool IsCollection { get { return (CollectionAdd != null); } }
        override public bool IsConstructible { get { return (Activator != null); } }
        override public bool IsDictionary { get { return (DictionaryAdd != null); } }
        override public bool IsMarkupExtension { get { return _isMarkupExtension; } }
        override public bool IsBindable { get { return _isBindable; } }
        override public bool IsReturnTypeStub { get { return _isReturnTypeStub; } }
        override public bool IsLocalType { get { return _isLocalType; } }

        override public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty
        {
            get { return _provider.GetMemberByLongName(_contentPropertyName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType ItemType
        {
            get { return _provider.GetXamlTypeByName(_itemTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType KeyType
        {
            get { return _provider.GetXamlTypeByName(_keyTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name)
        {
            if (_memberNames == null)
            {
                return null;
            }
            string longName;
            if (_memberNames.TryGetValue(name, out longName))
            {
                return _provider.GetMemberByLongName(longName);
            }
            return null;
        }

        override public object ActivateInstance()
        {
            return Activator(); 
        }

        override public void AddToMap(object instance, object key, object item) 
        {
            DictionaryAdd(instance, key, item);
        }

        override public void AddToVector(object instance, object item)
        {
            CollectionAdd(instance, item);
        }

        override public void RunInitializer() 
        {
            System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(UnderlyingType.TypeHandle);
        }

        override public object CreateFromString(string input)
        {
            if (_enumValues != null)
            {
                int value = 0;

                string[] valueParts = input.Split(',');

                foreach (string valuePart in valueParts) 
                {
                    object partValue;
                    int enumFieldValue = 0;
                    try
                    {
                        if (_enumValues.TryGetValue(valuePart.Trim(), out partValue))
                        {
                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                        }
                        else
                        {
                            try
                            {
                                enumFieldValue = global::System.Convert.ToInt32(valuePart.Trim());
                            }
                            catch( global::System.FormatException )
                            {
                                foreach( string key in _enumValues.Keys )
                                {
                                    if( string.Compare(valuePart.Trim(), key, global::System.StringComparison.OrdinalIgnoreCase) == 0 )
                                    {
                                        if( _enumValues.TryGetValue(key.Trim(), out partValue) )
                                        {
                                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                        value |= enumFieldValue; 
                    }
                    catch( global::System.FormatException )
                    {
                        throw new global::System.ArgumentException(input, FullName);
                    }
                }

                return value; 
            }
            throw new global::System.ArgumentException(input, FullName);
        }

        // --- End of Interface methods

        public Activator Activator { get; set; }
        public AddToCollection CollectionAdd { get; set; }
        public AddToDictionary DictionaryAdd { get; set; }

        public void SetContentPropertyName(string contentPropertyName)
        {
            _contentPropertyName = contentPropertyName;
        }

        public void SetIsArray()
        {
            _isArray = true; 
        }

        public void SetIsMarkupExtension()
        {
            _isMarkupExtension = true;
        }

        public void SetIsBindable()
        {
            _isBindable = true;
        }

        public void SetIsReturnTypeStub()
        {
            _isReturnTypeStub = true;
        }

        public void SetIsLocalType()
        {
            _isLocalType = true;
        }

        public void SetItemTypeName(string itemTypeName)
        {
            _itemTypeName = itemTypeName;
        }

        public void SetKeyTypeName(string keyTypeName)
        {
            _keyTypeName = keyTypeName;
        }

        public void AddMemberName(string shortName)
        {
            if(_memberNames == null)
            {
                _memberNames =  new global::System.Collections.Generic.Dictionary<string,string>();
            }
            _memberNames.Add(shortName, FullName + "." + shortName);
        }

        public void AddEnumValue(string name, object value)
        {
            if (_enumValues == null)
            {
                _enumValues = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            _enumValues.Add(name, value);
        }
    }

    internal delegate object Getter(object instance);
    internal delegate void Setter(object instance, object value);

    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlMember : global::Windows.UI.Xaml.Markup.IXamlMember
    {
        global::Feeder.FeederApp_XamlTypeInfo.XamlTypeInfoProvider _provider;
        string _name;
        bool _isAttachable;
        bool _isDependencyProperty;
        bool _isReadOnly;

        string _typeName;
        string _targetTypeName;

        public XamlMember(global::Feeder.FeederApp_XamlTypeInfo.XamlTypeInfoProvider provider, string name, string typeName)
        {
            _name = name;
            _typeName = typeName;
            _provider = provider;
        }

        public string Name { get { return _name; } }

        public global::Windows.UI.Xaml.Markup.IXamlType Type
        {
            get { return _provider.GetXamlTypeByName(_typeName); }
        }

        public void SetTargetTypeName(string targetTypeName)
        {
            _targetTypeName = targetTypeName;
        }
        public global::Windows.UI.Xaml.Markup.IXamlType TargetType
        {
            get { return _provider.GetXamlTypeByName(_targetTypeName); }
        }

        public void SetIsAttachable() { _isAttachable = true; }
        public bool IsAttachable { get { return _isAttachable; } }

        public void SetIsDependencyProperty() { _isDependencyProperty = true; }
        public bool IsDependencyProperty { get { return _isDependencyProperty; } }

        public void SetIsReadOnly() { _isReadOnly = true; }
        public bool IsReadOnly { get { return _isReadOnly; } }

        public Getter Getter { get; set; }
        public object GetValue(object instance)
        {
            if (Getter != null)
                return Getter(instance);
            else
                throw new global::System.InvalidOperationException("GetValue");
        }

        public Setter Setter { get; set; }
        public void SetValue(object instance, object value)
        {
            if (Setter != null)
                Setter(instance, value);
            else
                throw new global::System.InvalidOperationException("SetValue");
        }
    }
}


